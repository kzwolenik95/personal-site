name: Deploy Hugo site to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_TOKEN_app_terraform_io: ${{ secrets.HCP_TERRAFORM_TOKEN }}
      TF_FORCE_LOCAL_BACKEND: 1
      TF_VAR_repository_name: ${{ github.event.repository.name }}
      TF_VAR_github_token: ${{ secrets.GH_PAT_TOKEN }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_apex_domain: ${{ vars.APEX_DOMAIN }}
    defaults:
      run:
        working-directory: terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.2

      - run: terraform init
      - run: terraform validate -no-color
      - run: terraform apply -no-color --auto-approve

  # # Build job
  # build:
  #   runs-on: ubuntu-latest
  #   needs: terraform
  #   env:
  #     HUGO_VERSION: 0.128.0
  #   steps:
  #     - name: Install Hugo CLI
  #       run: |
  #         wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
  #         && sudo dpkg -i ${{ runner.temp }}/hugo.deb
  #     - name: Install Dart Sass
  #       run: sudo snap install dart-sass
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #     - name: Setup Pages
  #       id: pages
  #       uses: actions/configure-pages@v5
  #     - name: Install Node.js dependencies
  #       run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
  #     - name: Build with Hugo
  #       env:
  #         HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
  #         HUGO_ENVIRONMENT: production
  #       run: |
  #         hugo \
  #           --minify \
  #           --baseURL "${{ steps.pages.outputs.base_url }}/"
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v3
  #       with:
  #         path: ./public

  # # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v4
